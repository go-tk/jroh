// Code generated by jrohc. DO NOT EDIT.

package barapi

import (
	context "context"
	apicommon "github.com/go-tk/jroh/go/apicommon"
)

type TestClient interface {
	DoSomething(ctx context.Context) (results *DoSomethingResults, err error)
}

type testClient struct {
	apicommon.Client

	rpcInterceptorTable [1][]apicommon.RPCHandler
}

func NewTestClient(rpcBaseURL string, options apicommon.ClientOptions) TestClient {
	var c testClient
	c.Init(rpcBaseURL, options)
	apicommon.FillRPCInterceptorTable(c.rpcInterceptorTable[:], options.RPCInterceptors)
	return &c
}

func (c *testClient) DoSomething(ctx context.Context) (*DoSomethingResults, error) {
	var s struct {
		OutgoingRPC apicommon.OutgoingRPC
		Results     DoSomethingResults
	}
	rpcInterceptors := c.rpcInterceptorTable[Test_DoSomething]
	s.OutgoingRPC.Init(
		"Bar",
		"Test",
		"DoSomething",
		nil,
		&s.Results,
		apicommon.HandleRPC,
		rpcInterceptors,
	)
	if err := c.DoRPC(ctx, &s.OutgoingRPC, "/rpc/Bar.Test.DoSomething"); err != nil {
		return nil, err
	}
	return &s.Results, nil
}

type TestClientFuncs struct {
	DoSomethingFunc func(context.Context) (*DoSomethingResults, error)
}

var _ TestClient = (*TestClientFuncs)(nil)

func (cf *TestClientFuncs) DoSomething(ctx context.Context) (*DoSomethingResults, error) {
	if f := cf.DoSomethingFunc; f != nil {
		return f(ctx)
	}
	return &DoSomethingResults{}, nil
}
