// Code generated by jrohc. DO NOT EDIT.

package barapi

import (
	apicommon "github.com/go-tk/jroh/go/apicommon"
	fooapi "github.com/go-tk/jroh/go/apicommon/testdata/fooapi"
)

type DoSomethingResults struct {
	MyStructInt32   *fooapi.MyStructInt32   `json:"myStructInt32,omitempty"`
	MyStructInt64   *fooapi.MyStructInt64   `json:"myStructInt64,omitempty"`
	MyStructFloat32 *fooapi.MyStructFloat32 `json:"myStructFloat32,omitempty"`
	MyStructFloat64 *fooapi.MyStructFloat64 `json:"myStructFloat64,omitempty"`
	MyStructString  *fooapi.MyStructString  `json:"myStructString,omitempty"`
}

var _ apicommon.Validator = (*DoSomethingResults)(nil)

func (m *DoSomethingResults) Validate(validationContext *apicommon.ValidationContext) bool {
	if m.MyStructInt32 != nil {
		validationContext.Enter("myStructInt32")
		if !m.MyStructInt32.Validate(validationContext) {
			return false
		}
		validationContext.Leave()
	}
	if m.MyStructInt64 != nil {
		validationContext.Enter("myStructInt64")
		if !m.MyStructInt64.Validate(validationContext) {
			return false
		}
		validationContext.Leave()
	}
	if m.MyStructFloat32 != nil {
		validationContext.Enter("myStructFloat32")
		if !m.MyStructFloat32.Validate(validationContext) {
			return false
		}
		validationContext.Leave()
	}
	if m.MyStructFloat64 != nil {
		validationContext.Enter("myStructFloat64")
		if !m.MyStructFloat64.Validate(validationContext) {
			return false
		}
		validationContext.Leave()
	}
	if m.MyStructString != nil {
		validationContext.Enter("myStructString")
		if !m.MyStructString.Validate(validationContext) {
			return false
		}
		validationContext.Leave()
	}
	return true
}
