# File generated by jrohc. DO NOT EDIT.
openapi: 3.0.0
info:
  title: Models
  version: ''
paths: {}
components:
  schemas:
    createProfileParams:
      type: object
      properties:
        profile:
          allOf:
          - $ref: '#/components/schemas/profile'
          - description: Details of the profile.
      required:
      - profile
    createProfileResp:
      type: object
      properties:
        traceID:
          type: string
          description: The identifier of the trace associated with the log entry.
          example: 9m4e2mr0ui3e8a215n4g
        error:
          allOf:
          - $ref: ../common.yaml#/components/schemas/error
          - description: The error encountered. This field is mutually exclusive of
              the `results` field.
        results:
          allOf:
          - $ref: '#/components/schemas/createProfileResults'
          - description: The results returned. This field is mutually exclusive of
              the `error` field.
      required:
      - traceID
    createProfileResults:
      type: object
      properties:
        profileID:
          type: integer
          format: int64
          description: The identifier of the profile created.
          example: 1000
      required:
      - profileID
    getProfileParams:
      type: object
      properties:
        profileID:
          type: integer
          format: int64
          description: The identifier of the profile to retrieve.
          example: 1000
      required:
      - profileID
    getProfileResp:
      type: object
      properties:
        traceID:
          type: string
          description: The identifier of the trace associated with the log entry.
          example: 9m4e2mr0ui3e8a215n4g
        error:
          allOf:
          - $ref: ../common.yaml#/components/schemas/error
          - description: The error encountered. This field is mutually exclusive of
              the `results` field.
        results:
          allOf:
          - $ref: '#/components/schemas/getProfileResults'
          - description: The results returned. This field is mutually exclusive of
              the `error` field.
      required:
      - traceID
    getProfileResults:
      type: object
      properties:
        profile:
          allOf:
          - $ref: '#/components/schemas/profile'
          - description: Details of the profile.
      required:
      - profile
    updateProfileParams:
      type: object
      properties:
        profilePatch:
          allOf:
          - $ref: '#/components/schemas/profilePatch'
          - description: The patch to apply to the profile.
      required:
      - profilePatch
    updateProfileResp:
      type: object
      properties:
        traceID:
          type: string
          description: The identifier of the trace associated with the log entry.
          example: 9m4e2mr0ui3e8a215n4g
        error:
          allOf:
          - $ref: ../common.yaml#/components/schemas/error
          - description: The error encountered.
      required:
      - traceID
    deleteProfileParams:
      type: object
      properties:
        profileID:
          type: integer
          format: int64
          description: The identifier of the profile to purge.
          example: 1000
      required:
      - profileID
    deleteProfileResp:
      type: object
      properties:
        traceID:
          type: string
          description: The identifier of the trace associated with the log entry.
          example: 9m4e2mr0ui3e8a215n4g
        error:
          allOf:
          - $ref: ../common.yaml#/components/schemas/error
          - description: The error encountered.
      required:
      - traceID
    profile:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: The identifier of the profile. It's ignored while creating
            a profile.
          example: 1000
        nickname:
          type: string
          description: The nickname. Should not be empty string.
          example: Lee
        genderType:
          allOf:
          - $ref: '#/components/schemas/genderType'
          - description: |-
              The type of gender.

              Constants:

              - GENDER_FEMALE(1): The gender is female.
              - GENDER_MALE(2): The gender is male.
              - GENDER_OTHER(3): Other genders.
        weight:
          type: number
          format: double
          description: The weight in kilograms.
          example: 177.1
        height:
          type: integer
          format: int32
          description: The height in centimeters.
          example: 73
      required:
      - id
      - nickname
      - genderType
    genderType:
      type: integer
      format: int32
      enum:
      - 1
      - 2
      - 3
    profilePatch:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: The identifier of the profile to update.
          example: 1000
        nickname:
          type: string
          description: The new nickname. Should not be empty string.
          example: Lyn
        genderType:
          allOf:
          - $ref: '#/components/schemas/genderType'
          - description: |-
              The new type of gender.

              Constants:

              - GENDER_FEMALE(1): The gender is female.
              - GENDER_MALE(2): The gender is male.
              - GENDER_OTHER(3): Other genders.
        weight:
          type: number
          format: double
          description: The new weight in kilograms.
          example: 70.8
        height:
          type: integer
          format: int32
          description: The new height in centimeters.
          example: 175
      required:
      - id
