// Code generated by jrohc. DO NOT EDIT.

package helloworldapi

import (
	context "context"
	apicommon "github.com/go-tk/jroh/go/apicommon"
)

type GreeterServer interface {
	SayHello(ctx context.Context, params *SayHelloParams, results *SayHelloResults) (err error)
}

func RegisterGreeterServer(server GreeterServer, router *apicommon.Router, serverOptions apicommon.ServerOptions) {
	serverOptions.Sanitize()
	var serverMiddlewareTable [1][]apicommon.ServerMiddleware
	apicommon.FillServerMiddlewareTable(serverMiddlewareTable[:], serverOptions.Middlewares)
	var rpcFiltersTable [1][]apicommon.RPCHandler
	apicommon.FillRPCFiltersTable(rpcFiltersTable[:], serverOptions.RPCFilters)
	{
		serverMiddlewares := serverMiddlewareTable[Greeter_SayHello]
		rpcFilters := rpcFiltersTable[Greeter_SayHello]
		incomingRPCFactory := func() *apicommon.IncomingRPC {
			var s struct {
				IncomingRPC apicommon.IncomingRPC
				Params      SayHelloParams
				Results     SayHelloResults
			}
			rpcHandler := func(ctx context.Context, rpc *apicommon.RPC) error {
				return server.SayHello(ctx, rpc.Params().(*SayHelloParams), rpc.Results().(*SayHelloResults))
			}
			s.IncomingRPC.Init("HelloWorld", "Greeter", "SayHello", "HelloWorld.Greeter.SayHello", Greeter_SayHello, &s.Params, &s.Results, rpcHandler, rpcFilters)
			return &s.IncomingRPC
		}
		handler := apicommon.MakeHandler(serverMiddlewares, incomingRPCFactory, serverOptions.TraceIDGenerator)
		router.AddRoute("/rpc/HelloWorld.Greeter.SayHello", handler, "HelloWorld.Greeter.SayHello", serverMiddlewares, rpcFilters)
	}
}

type GreeterServerFuncs struct {
	SayHelloFunc func(context.Context, *SayHelloParams, *SayHelloResults) error
}

var _ GreeterServer = (*GreeterServerFuncs)(nil)

func (sf *GreeterServerFuncs) SayHello(ctx context.Context, params *SayHelloParams, results *SayHelloResults) error {
	f := sf.SayHelloFunc
	if f == nil {
		return apicommon.ErrNotImplemented
	}
	return f(ctx, params, results)
}
